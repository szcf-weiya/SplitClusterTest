[{"path":"https://hohoweiya.xyz/SplitClusterTest/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 SplitClusterTest authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/articles/one-cell-type.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"One Cell Type","text":"","code":"sessionInfo() #> R version 4.1.3 (2022-03-10) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.5 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] SplitClusterTest_0.1.0 #>  #> loaded via a namespace (and not attached): #>   [1] spatstat.univar_3.0-1       spam_2.11-0                 #>   [3] systemfonts_1.1.0           plyr_1.8.9                  #>   [5] igraph_2.1.1                lazyeval_0.2.2              #>   [7] sp_2.1-4                    splines_4.1.3               #>   [9] listenv_0.9.1               scattermore_1.2             #>  [11] GenomeInfoDb_1.30.1         ggplot2_3.5.1               #>  [13] digest_0.6.37               htmltools_0.5.8.1           #>  [15] fansi_1.0.6                 magrittr_2.0.3              #>  [17] tensor_1.5                  cluster_2.1.2               #>  [19] ROCR_1.0-11                 globals_0.16.3              #>  [21] matrixStats_1.4.1           pkgdown_2.1.1               #>  [23] spatstat.sparse_3.1-0       colorspace_2.1-1            #>  [25] ggrepel_0.9.6               textshaping_0.4.0           #>  [27] xfun_0.48                   dplyr_1.1.4                 #>  [29] RCurl_1.98-1.16             jsonlite_1.8.9              #>  [31] progressr_0.14.0            spatstat.data_3.1-2         #>  [33] survival_3.2-13             zoo_1.8-12                  #>  [35] glue_1.8.0                  polyclip_1.10-7             #>  [37] gtable_0.3.5                zlibbioc_1.40.0             #>  [39] XVector_0.34.0              leiden_0.4.3.1              #>  [41] DelayedArray_0.20.0         future.apply_1.11.2         #>  [43] SingleCellExperiment_1.16.0 BiocGenerics_0.40.0         #>  [45] abind_1.4-8                 scales_1.3.0                #>  [47] spatstat.random_3.3-2       miniUI_0.1.1.1              #>  [49] Rcpp_1.0.13                 viridisLite_0.4.2           #>  [51] xtable_1.8-4                reticulate_1.39.0           #>  [53] dotCall64_1.2               stats4_4.1.3                #>  [55] htmlwidgets_1.6.4           httr_1.4.7                  #>  [57] RColorBrewer_1.1-3          Seurat_4.4.0                #>  [59] ica_1.0-3                   pkgconfig_2.0.3             #>  [61] farver_2.1.2                sass_0.4.9                  #>  [63] uwot_0.2.2                  deldir_2.0-4                #>  [65] utf8_1.2.4                  tidyselect_1.2.1            #>  [67] rlang_1.1.4                 reshape2_1.4.4              #>  [69] later_1.3.2                 munsell_0.5.1               #>  [71] tools_4.1.3                 cachem_1.1.0                #>  [73] cli_3.6.3                   generics_0.1.3              #>  [75] ggridges_0.5.6              evaluate_1.0.1              #>  [77] stringr_1.5.1               fastmap_1.2.0               #>  [79] yaml_2.3.10                 ragg_1.3.3                  #>  [81] goftest_1.2-3               knitr_1.48                  #>  [83] fs_1.6.4                    fitdistrplus_1.2-1          #>  [85] purrr_1.0.2                 RANN_2.6.2                  #>  [87] pbapply_1.7-2               future_1.34.0               #>  [89] nlme_3.1-155                mime_0.12                   #>  [91] compiler_4.1.3              plotly_4.10.4               #>  [93] png_0.1-8                   spatstat.utils_3.1-0        #>  [95] tibble_3.2.1                bslib_0.8.0                 #>  [97] stringi_1.8.4               highr_0.11                  #>  [99] desc_1.4.3                  lattice_0.20-45             #> [101] Matrix_1.6-5                vctrs_0.6.5                 #> [103] pillar_1.9.0                lifecycle_1.0.4             #> [105] spatstat.geom_3.3-3         lmtest_0.9-40               #> [107] jquerylib_0.1.4             RcppAnnoy_0.0.22            #> [109] data.table_1.16.2           cowplot_1.1.3               #> [111] bitops_1.0-9                irlba_2.3.5.1               #> [113] httpuv_1.6.15               patchwork_1.3.0             #> [115] GenomicRanges_1.46.1        R6_2.5.1                    #> [117] promises_1.3.0              KernSmooth_2.23-20          #> [119] gridExtra_2.3               IRanges_2.28.0              #> [121] parallelly_1.38.0           codetools_0.2-18            #> [123] MASS_7.3-55                 SummarizedExperiment_1.24.0 #> [125] SeuratObject_5.0.2          sctransform_0.4.1           #> [127] S4Vectors_0.32.4            GenomeInfoDbData_1.2.7      #> [129] parallel_4.1.3              grid_4.1.3                  #> [131] tidyr_1.3.1                 rmarkdown_2.28              #> [133] MatrixGenerics_1.6.0        Rtsne_0.17                  #> [135] spatstat.explore_3.3-3      Biobase_2.54.0              #> [137] shiny_1.9.1"},{"path":"https://hohoweiya.xyz/SplitClusterTest/articles/two-cell-types.html","id":"step-1-perform-testing-after-clustering-on-each-half-via-multiple-data-splitting","dir":"Articles","previous_headings":"","what":"Step 1: Perform Testing-after-Clustering on Each Half via (Multiple) Data Splitting","title":"Two Cell Types","text":"returns mirror statistics,  step, cutoff chosen control nominal False Discovery Rate (FDR) q = 0.05. Note histogram results first data splitting mss[[1]]. multiple data splitting, can aggregate results calculating inclusion rate gene, also calculate cutoff. , either DS MDS, can obtain estimation significant DE gene set. wrap second step. multiple data splitting (MDS), can aggregate results calculating inclusion rate gene determining new cutoff. allows us estimate set significant DE genes, whether using DS MDS. wrap process second step:","code":"mss = mds1(simdata_2ct$simu_sce,      M = 1, # times of data splitting      params1 = list(normalized_method = \"none\"), # parameters for the first half      params2 = list(normalized_method = \"none\")) # parameters for the second half #>  #> ===== Multiple Data Splitting:  1 / 1  ===== #>  #> ----- data splitting (1st half) ----- #>  #> ----- data splitting (2nd half) ---- hist(mss[[1]], breaks = 50) cutoff = calc_tau(mss[[1]], q = 0.05) abline(v = cutoff, lwd = 2, col = \"red\")"},{"path":"https://hohoweiya.xyz/SplitClusterTest/articles/two-cell-types.html","id":"step-2--calculate-cutoff-and-estimate-the-selection-set","dir":"Articles","previous_headings":"","what":"Step 2. Calculate Cutoff and Estimate the Selection Set","title":"Two Cell Types","text":"can also evaluate accuracy","code":"sel = mds2(mss, q = 0.05) #> use the tie.method =  fair sel #>  [1] \"ENSG00000144713\" \"ENSG00000167526\" \"ENSG00000115268\" \"ENSG00000105640\" #>  [5] \"ENSG00000108298\" \"ENSG00000177600\" \"ENSG00000198242\" \"ENSG00000112306\" #>  [9] \"ENSG00000142676\" \"ENSG00000145425\" \"ENSG00000105372\" \"ENSG00000083845\" #> [13] \"ENSG00000166441\" \"ENSG00000122026\" \"ENSG00000143947\" \"ENSG00000205542\" #> [17] \"ENSG00000034510\" \"ENSG00000109475\" \"ENSG00000251562\" \"ENSG00000147604\" #> [21] \"ENSG00000138326\" \"ENSG00000102879\" \"ENSG00000116251\" \"ENSG00000185201\" #> [25] \"ENSG00000140319\" \"ENSG00000148908\" calc_acc(sel, truth) #>       fdr     power        f1  #> 0.2307692 1.0000000 0.8695652"},{"path":"https://hohoweiya.xyz/SplitClusterTest/articles/two-cell-types.html","id":"a-whole-step","dir":"Articles","previous_headings":"","what":"A Whole Step","title":"Two Cell Types","text":"whole, two steps mds1 mds2 wrapped single function mds, can simply run following command obtain selection set. comparison, also check naive double-dipping method. accuracy ","code":"sel = mds(simdata_2ct$simu_sce,      q = 0.05,       M = 1,       params1 = list(normalized_method = \"none\"),       params2 = list(normalized_method = \"none\")) #>  #> ===== Multiple Data Splitting:  1 / 1  ===== #>  #> ----- data splitting (1st half) ----- #>  #> ----- data splitting (2nd half) ---- #> use the tie.method =  fair sel.dd = dd(simdata_2ct$simu_sce, params = list(normalized_method = \"none\"), q = 0.05, test.use = \"t\") calc_acc(sel.dd, truth) #>   fdr power    f1  #>     0     1     1"},{"path":"https://hohoweiya.xyz/SplitClusterTest/articles/two-cell-types.html","id":"normalization","dir":"Articles","previous_headings":"","what":"Normalization","title":"Two Cell Types","text":"practice, account library size, normalization method needed. One suitable approach SCT transform.","code":"sel.sct = mds(simdata_2ct$simu_sce,      q = 0.05,       M = 1,       params1 = list(normalized_method = \"sct\"),       params2 = list(normalized_method = \"sct\")) #>  #> ===== Multiple Data Splitting:  1 / 1  ===== #>  #> ----- data splitting (1st half) ----- #>  #> ----- data splitting (2nd half) ---- #> use the tie.method =  fair sel.dd.sct = dd(simdata_2ct$simu_sce, params = list(normalized_method = \"sct\")) #> Warning: The following arguments are not used: norm.method sapply(list(ds = sel.sct, dd = sel.dd.sct), function(x) calc_acc(x, names(simdata_2ct$de_idx))) #>               ds        dd #> fdr   0.09090909 0.8245614 #> power 1.00000000 1.0000000 #> f1    0.95238095 0.2985075"},{"path":"https://hohoweiya.xyz/SplitClusterTest/articles/two-cell-types.html","id":"whitening","dir":"Articles","previous_headings":"","what":"Whitening","title":"Two Cell Types","text":"recommend whitening strategy weak signal (highly) correlated data.","code":"sel = mds(simdata_2ct$simu_sce,      q = 0.05,       M = 1,       params1 = list(normalized_method = \"sct\", pca.whiten = TRUE),       params2 = list(normalized_method = \"sct\", pca.whiten = TRUE)) #>  #> ===== Multiple Data Splitting:  1 / 1  ===== #>  #> ----- data splitting (1st half) ----- #>  #> ----- data splitting (2nd half) ---- #> use the tie.method =  fair sel.dd = dd(simdata_2ct$simu_sce, params = list(normalized_method = \"sct\", pca.whiten = TRUE)) #> Warning: The following arguments are not used: norm.method sapply(list(ds = sel, dd = sel.dd), function(x) calc_acc(x, names(simdata_2ct$de_idx))) #>               ds        dd #> fdr   0.04761905 0.8290598 #> power 1.00000000 1.0000000 #> f1    0.97560976 0.2919708"},{"path":"https://hohoweiya.xyz/SplitClusterTest/articles/two-cell-types.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"Two Cell Types","text":"","code":"sessionInfo() #> R version 4.1.3 (2022-03-10) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.5 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] SplitClusterTest_0.1.0 #>  #> loaded via a namespace (and not attached): #>   [1] spatstat.univar_3.0-1       spam_2.11-0                 #>   [3] systemfonts_1.1.0           plyr_1.8.9                  #>   [5] igraph_2.1.1                lazyeval_0.2.2              #>   [7] sp_2.1-4                    splines_4.1.3               #>   [9] listenv_0.9.1               scattermore_1.2             #>  [11] GenomeInfoDb_1.30.1         ggplot2_3.5.1               #>  [13] digest_0.6.37               htmltools_0.5.8.1           #>  [15] fansi_1.0.6                 magrittr_2.0.3              #>  [17] tensor_1.5                  cluster_2.1.2               #>  [19] ROCR_1.0-11                 globals_0.16.3              #>  [21] matrixStats_1.4.1           pkgdown_2.1.1               #>  [23] spatstat.sparse_3.1-0       colorspace_2.1-1            #>  [25] ggrepel_0.9.6               textshaping_0.4.0           #>  [27] xfun_0.48                   dplyr_1.1.4                 #>  [29] RCurl_1.98-1.16             jsonlite_1.8.9              #>  [31] progressr_0.14.0            spatstat.data_3.1-2         #>  [33] survival_3.2-13             zoo_1.8-12                  #>  [35] glue_1.8.0                  polyclip_1.10-7             #>  [37] gtable_0.3.5                zlibbioc_1.40.0             #>  [39] XVector_0.34.0              leiden_0.4.3.1              #>  [41] DelayedArray_0.20.0         future.apply_1.11.2         #>  [43] SingleCellExperiment_1.16.0 BiocGenerics_0.40.0         #>  [45] abind_1.4-8                 scales_1.3.0                #>  [47] spatstat.random_3.3-2       miniUI_0.1.1.1              #>  [49] Rcpp_1.0.13                 viridisLite_0.4.2           #>  [51] xtable_1.8-4                reticulate_1.39.0           #>  [53] dotCall64_1.2               stats4_4.1.3                #>  [55] htmlwidgets_1.6.4           httr_1.4.7                  #>  [57] RColorBrewer_1.1-3          Seurat_4.4.0                #>  [59] ica_1.0-3                   pkgconfig_2.0.3             #>  [61] farver_2.1.2                sass_0.4.9                  #>  [63] uwot_0.2.2                  deldir_2.0-4                #>  [65] utf8_1.2.4                  tidyselect_1.2.1            #>  [67] rlang_1.1.4                 reshape2_1.4.4              #>  [69] later_1.3.2                 munsell_0.5.1               #>  [71] tools_4.1.3                 cachem_1.1.0                #>  [73] cli_3.6.3                   generics_0.1.3              #>  [75] ggridges_0.5.6              evaluate_1.0.1              #>  [77] stringr_1.5.1               fastmap_1.2.0               #>  [79] yaml_2.3.10                 ragg_1.3.3                  #>  [81] goftest_1.2-3               knitr_1.48                  #>  [83] fs_1.6.4                    fitdistrplus_1.2-1          #>  [85] purrr_1.0.2                 RANN_2.6.2                  #>  [87] pbapply_1.7-2               future_1.34.0               #>  [89] nlme_3.1-155                mime_0.12                   #>  [91] compiler_4.1.3              plotly_4.10.4               #>  [93] png_0.1-8                   spatstat.utils_3.1-0        #>  [95] tibble_3.2.1                bslib_0.8.0                 #>  [97] stringi_1.8.4               highr_0.11                  #>  [99] desc_1.4.3                  lattice_0.20-45             #> [101] Matrix_1.6-5                vctrs_0.6.5                 #> [103] pillar_1.9.0                lifecycle_1.0.4             #> [105] spatstat.geom_3.3-3         lmtest_0.9-40               #> [107] jquerylib_0.1.4             RcppAnnoy_0.0.22            #> [109] data.table_1.16.2           cowplot_1.1.3               #> [111] bitops_1.0-9                irlba_2.3.5.1               #> [113] httpuv_1.6.15               patchwork_1.3.0             #> [115] GenomicRanges_1.46.1        R6_2.5.1                    #> [117] promises_1.3.0              KernSmooth_2.23-20          #> [119] gridExtra_2.3               IRanges_2.28.0              #> [121] parallelly_1.38.0           codetools_0.2-18            #> [123] MASS_7.3-55                 SummarizedExperiment_1.24.0 #> [125] SeuratObject_5.0.2          sctransform_0.4.1           #> [127] S4Vectors_0.32.4            GenomeInfoDbData_1.2.7      #> [129] parallel_4.1.3              grid_4.1.3                  #> [131] tidyr_1.3.1                 rmarkdown_2.28              #> [133] MatrixGenerics_1.6.0        Rtsne_0.17                  #> [135] spatstat.explore_3.3-3      Biobase_2.54.0              #> [137] shiny_1.9.1"},{"path":"https://hohoweiya.xyz/SplitClusterTest/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lijun Wang. Author, maintainer. Yingxin Lin. Author.","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wang L, Lin Y (2024). SplitClusterTest: FDR Control via Data Splitting Testing--Clustering. R package version 0.1.0, https://github.com/szcf-weiya/SplitClusterTest.","code":"@Manual{,   title = {SplitClusterTest: FDR Control via Data Splitting for Testing-after-Clustering},   author = {Lijun Wang and Yingxin Lin},   year = {2024},   note = {R package version 0.1.0},   url = {https://github.com/szcf-weiya/SplitClusterTest}, }"},{"path":"https://hohoweiya.xyz/SplitClusterTest/index.html","id":"splitclustertest","dir":"","previous_headings":"","what":"FDR Control via Data Splitting for Testing-after-Clustering","title":"FDR Control via Data Splitting for Testing-after-Clustering","text":"R package Wang, L., Lin, Y., & Zhao, H. (2024). False Discovery Rate Control via Data Splitting Testing--Clustering (arXiv:2410.06451). arXiv. https://doi.org/10.48550/arXiv.2410.06451","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/index.html","id":"hammer_and_wrench-installation","dir":"","previous_headings":"","what":"🛠️ Installation","title":"FDR Control via Data Splitting for Testing-after-Clustering","text":"single-cell data analysis, package depends Seurat. Since potential compatibility issue across different major versions Seurat. recommend Seurat v4, can installed via following command: can install package via","code":"devtools::install_github(\"satijalab/seurat@v4.4.0\") devtools::install_github(\"szcf-weiya/SplitClusterTest\")"},{"path":"https://hohoweiya.xyz/SplitClusterTest/index.html","id":"arrow_right-see-also","dir":"","previous_headings":"","what":"➡️ See also","title":"FDR Control via Data Splitting for Testing-after-Clustering","text":"Julia implementation: https://github.com/szcf-weiya/SplitClusterTest.jl comparison data splitting data fission, check https://github.com/szcf-weiya/fission_vs_splitting.","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/calc_acc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the accuracy (FDR, Power, F1 score) if truth is available — calc_acc","title":"Calculate the accuracy (FDR, Power, F1 score) if truth is available — calc_acc","text":"Calculate accuracy (FDR, Power, F1 score) truth available","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/calc_acc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the accuracy (FDR, Power, F1 score) if truth is available — calc_acc","text":"","code":"calc_acc(est, truth)"},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/calc_acc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the accuracy (FDR, Power, F1 score) if truth is available — calc_acc","text":"est selected relavent features truth vector true relevant features","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/calc_acc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the accuracy (FDR, Power, F1 score) if truth is available — calc_acc","text":"vector size three: fdr, power, F1 score","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/calc_inc_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the inclusion rate — calc_inc_rate","title":"Calculate the inclusion rate — calc_inc_rate","text":"Calculate inclusion rate","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/calc_inc_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the inclusion rate — calc_inc_rate","text":"","code":"calc_inc_rate(mss, q = 0.05, sum_in_denom = TRUE)"},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/calc_inc_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the inclusion rate — calc_inc_rate","text":"mss list selection multiple data splitting q nominal FDR level sum_in_denom use modified inclusion rate (TRUE) original inclusion rate (FALSE)","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/calc_inc_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the inclusion rate — calc_inc_rate","text":"inclusion rate feature","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/calc_tau.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the cutoff the mirror statistics — calc_tau","title":"Calculate the cutoff the mirror statistics — calc_tau","text":"Calculate cutoff mirror statistics","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/calc_tau.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the cutoff the mirror statistics — calc_tau","text":"","code":"calc_tau(ms, q = 0.05)"},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/calc_tau.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the cutoff the mirror statistics — calc_tau","text":"ms Array mirror statistics q nominal FDR level (default: 0.05)","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/calc_tau.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the cutoff the mirror statistics — calc_tau","text":"cutoff","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/dd.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for the naive double-dipping method — dd","title":"Wrapper for the naive double-dipping method — dd","text":"Wrapper naive double-dipping method","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/dd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for the naive double-dipping method — dd","text":"","code":"dd(sce, params, test.use = \"t\", q = 0.05)"},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/dd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for the naive double-dipping method — dd","text":"sce SingleCellExperiment object params parameters passed clustering step perform_clustering test.use hypothesis testing DE test. Possible choices: t, wilcox, poisson, negbinom q nominal FDR level","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/dd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper for the naive double-dipping method — dd","text":"vector selected significant features","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/ds.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Splitting for Seurat object — ds","title":"Data Splitting for Seurat object — ds","text":"Data Splitting Seurat object","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/ds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Splitting for Seurat object — ds","text":"","code":"ds(   sce,   params1 = NULL,   params2 = NULL,   seed = NA,   test.use = \"t\",   signal_measurement = \"tstat\",   test.from.raw = TRUE )"},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/ds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Splitting for Seurat object — ds","text":"sce SingleCellExperiment object params1 list parameters passed perform_clustering first half data splitting params2 list parameters passed perform_clustering second half data splitting. seed random seed reproducibility test.use hypothesis testing DE test. Possible choices: t, wilcox, poisson, negbinom signal_measurement signal measurement. Possible choices: test statistic tstat, signed p-value pval test..raw whether perform testing original data without normalization normalized data","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/ds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data Splitting for Seurat object — ds","text":"vector mirror statistics","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/mds.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiple data splitting — mds","title":"Multiple data splitting — mds","text":"Multiple data splitting","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/mds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiple data splitting — mds","text":"","code":"mds(   sce,   ncores = 1,   M = 10,   q = 0.05,   tied.method = \"fair\",   sum_in_denom = TRUE,   ... )"},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/mds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiple data splitting — mds","text":"sce SingleCellExperiment object ncores larger 1, compute parallel ncores cores. M number data splitting q nominal FDR level (default: 0.05) tied.method method handling tied values. sum_in_denom calculating inclusion rate, use modified inclusion rate (TRUE) original inclusion rate (FALSE) ... arguments passed mds1 (mds1_parallel)","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/mds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiple data splitting — mds","text":"selected relevant features","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/mds1.html","id":null,"dir":"Reference","previous_headings":"","what":"Conduct multiple data splitting — mds1","title":"Conduct multiple data splitting — mds1","text":"Step 1 mds","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/mds1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conduct multiple data splitting — mds1","text":"","code":"mds1(sce, M = 2, ...)"},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/mds1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conduct multiple data splitting — mds1","text":"sce SingleCellExperiment object M number data splitting ... Arguments passed ds","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/mds1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conduct multiple data splitting — mds1","text":"list mirror statistics multiple data splitting","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/mds1_parallel.html","id":null,"dir":"Reference","previous_headings":"","what":"Conduct multiple data splitting in parallel — mds1_parallel","title":"Conduct multiple data splitting in parallel — mds1_parallel","text":"Step 1 (parallel) mds","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/mds1_parallel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conduct multiple data splitting in parallel — mds1_parallel","text":"","code":"mds1_parallel(sce, M = 2, ncores = 10, ...)"},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/mds1_parallel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conduct multiple data splitting in parallel — mds1_parallel","text":"sce SingleCellExperiment object M number data splitting ncores number cores used parallel computing. better factor M. ... Arguments passed ds","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/mds1_parallel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conduct multiple data splitting in parallel — mds1_parallel","text":"list mirror statistics multiple data splitting","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/mds2.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate multiple data splitting results, and return a selection set — mds2","title":"Aggregate multiple data splitting results, and return a selection set — mds2","text":"Aggregate multiple data splitting results, return selection set","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/mds2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate multiple data splitting results, and return a selection set — mds2","text":"","code":"mds2(mss, q = 0.05, tied.method = \"fair\", sum_in_denom = TRUE)"},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/mds2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate multiple data splitting results, and return a selection set — mds2","text":"mss list, contains selections multiple data splitting procedures q nominal FDR level (default: 0.05) tied.method method handling tied values. sum_in_denom calculating inclusion rate, use modified inclusion rate (TRUE) original inclusion rate (FALSE)","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/mds2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate multiple data splitting results, and return a selection set — mds2","text":"selected relevant features","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/myDiffTTest.html","id":null,"dir":"Reference","previous_headings":"","what":"Modified Seurat::DiffTTest by extending the output with statistics in addition to p-values — myDiffTTest","title":"Modified Seurat::DiffTTest by extending the output with statistics in addition to p-values — myDiffTTest","text":"Differential expression testing using Student's t-test","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/myDiffTTest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modified Seurat::DiffTTest by extending the output with statistics in addition to p-values — myDiffTTest","text":"","code":"myDiffTTest(data.use, cells.1, cells.2, verbose = TRUE)"},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/myDiffTTest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modified Seurat::DiffTTest by extending the output with statistics in addition to p-values — myDiffTTest","text":"data.use Data matrix test cells.1 Group 1 cells cells.2 Group 2 cells verbose Print progress bar","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/myDiffTTest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Modified Seurat::DiffTTest by extending the output with statistics in addition to p-values — myDiffTTest","text":"Identify differentially expressed genes two groups cells using Student's t-test","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/myFindMarkers.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene expression markers of identity classes — myFindMarkers","title":"Gene expression markers of identity classes — myFindMarkers","text":"Wrapper Seurat::FindMarkers uses modified (extended) tests","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/myFindMarkers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene expression markers of identity classes — myFindMarkers","text":"","code":"myFindMarkers(object, ...)"},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/myFindMarkers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gene expression markers of identity classes — myFindMarkers","text":"object object ... Arguments passed methods specific DE methods","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/myFindMarkers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gene expression markers of identity classes — myFindMarkers","text":"Finds markers (differentially expressed genes) identity classes","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/myGLMDETest.html","id":null,"dir":"Reference","previous_headings":"","what":"Modified Seurat::GLMDETest by extending the output with statistics in addition to p-values — myGLMDETest","title":"Modified Seurat::GLMDETest by extending the output with statistics in addition to p-values — myGLMDETest","text":"Modified Seurat::GLMDETest extending output statistics addition p-values","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/myGLMDETest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modified Seurat::GLMDETest by extending the output with statistics in addition to p-values — myGLMDETest","text":"","code":"myGLMDETest(   data.use,   cells.1,   cells.2,   min.cells = 3,   latent.vars = NULL,   test.use = NULL,   verbose = TRUE )"},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/myGLMDETest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modified Seurat::GLMDETest by extending the output with statistics in addition to p-values — myGLMDETest","text":"data.use Data test cells.1 Group 1 cells cells.2 Group 2 cells min.cells Minimum number cells threshold latent.vars Latent variables test test.use parameterizes glm verbose Print progress bar","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/myGLMDETest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modified Seurat::GLMDETest by extending the output with statistics in addition to p-values — myGLMDETest","text":"Returns p-value ranked matrix putative differentially expressed","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/myWilcoxDETest.html","id":null,"dir":"Reference","previous_headings":"","what":"Modified Seurat::WilcoxDETest by extending the output with statistics in addition to p-values — myWilcoxDETest","title":"Modified Seurat::WilcoxDETest by extending the output with statistics in addition to p-values — myWilcoxDETest","text":"Modified Seurat::WilcoxDETest extending output statistics addition p-values","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/myWilcoxDETest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modified Seurat::WilcoxDETest by extending the output with statistics in addition to p-values — myWilcoxDETest","text":"","code":"myWilcoxDETest(data.use, cells.1, cells.2, verbose = TRUE, ...)"},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/myWilcoxDETest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modified Seurat::WilcoxDETest by extending the output with statistics in addition to p-values — myWilcoxDETest","text":"data.use Data matrix test cells.1 Group 1 cells cells.2 Group 2 cells verbose Print progress bar ... Extra parameters passed wilcox.test","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/myWilcoxDETest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modified Seurat::WilcoxDETest by extending the output with statistics in addition to p-values — myWilcoxDETest","text":"Returns p-value ranked matrix putative differentially expressed features","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/perform_clustering.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Clustering on a SingleCellExperiment object — perform_clustering","title":"Perform Clustering on a SingleCellExperiment object — perform_clustering","text":"Perform Clustering SingleCellExperiment object","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/perform_clustering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Clustering on a SingleCellExperiment object — perform_clustering","text":"","code":"perform_clustering(   sce,   ret_obj = FALSE,   normalized_method = \"LogNormalize\",   use.kmeans = FALSE,   kmeans.nstart = 1,   resolution = 0.5,   step = 0.05,   maxiter = 40,   louvain.nstart = 1,   louvain.alg = 1,   seed.cluster = 0,   kmeans.whiten = FALSE,   pca.whiten = FALSE,   npcs = 10,   k.param = 20,   test.use = \"t\",   test.from.raw = FALSE,   signal_measurement = \"tstat\",   verbose = FALSE )"},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/perform_clustering.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Clustering on a SingleCellExperiment object — perform_clustering","text":"sce SingleCellExperiment object ret_obj (Default: FALSE) whether return sce operation instead returning signal measurement normalized_method Normalization method. Possible choices: LogNormalize, sct, none use.kmeans TRUE, clustering using kmeans two clusters, otherwise, use Seurat::FindClusters need find resolution achieve two clusters kmeans.nstart nstart parameter kmeans resolution resolution parameter Seurat::FindClusters step find resolution desired number clusters, step size changing resolution parameter maxiter maximum iteration searching resolution two clusters louvain.nstart n.start parameter Seurat::FindClusters louvain.alg algorithm parameter Seurat::FindClusters seed.cluster random.seed parameter Seurat::FindClusters kmeans.whiten whether whitening kmeans clustering pca.whiten whether whitening PCA using Louvain algorithms npcs number PCs, parameter npcs used Seurat::RunPCA k.param parameter k.param used Seurat::FindNeighbors test.use hypothesis testing DE test. Possible choices: t, wilcox, poisson, negbinom test..raw whether perform testing original data without normalization normalized data signal_measurement signal measurement. Possible choices: test statistic tstat, signed p-value pval verbose whether print internal log messages","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/perform_clustering.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Clustering on a SingleCellExperiment object — perform_clustering","text":"vector signal measurements feature","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/rankSumTestWithCorrelation.html","id":null,"dir":"Reference","previous_headings":"","what":"Wilcoxon rank sum test (adapted from limma::rankSumTestWithCorrelation) — rankSumTestWithCorrelation","title":"Wilcoxon rank sum test (adapted from limma::rankSumTestWithCorrelation) — rankSumTestWithCorrelation","text":"Wilcoxon rank sum test (adapted limma::rankSumTestWithCorrelation)","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/rankSumTestWithCorrelation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wilcoxon rank sum test (adapted from limma::rankSumTestWithCorrelation) — rankSumTestWithCorrelation","text":"","code":"rankSumTestWithCorrelation(index, statistics, correlation = 0, df = Inf)"},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/rankSumTestWithCorrelation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wilcoxon rank sum test (adapted from limma::rankSumTestWithCorrelation) — rankSumTestWithCorrelation","text":"index index vector statistics[index] contains values statistic test group. statistics numeric vector giving values test statistic. correlation numeric scalar, average correlation cases test group.  Cases second group assumed independent first group. df degrees freedom correlation estimated.","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/rankSumTestWithCorrelation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wilcoxon rank sum test (adapted from limma::rankSumTestWithCorrelation) — rankSumTestWithCorrelation","text":"Numeric vector length 4 containing left.tail right.tail p-values corresponding test statistics.","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/sel_inc_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform selection based on inclusion rate — sel_inc_rate","title":"Perform selection based on inclusion rate — sel_inc_rate","text":"Perform selection based inclusion rate","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/sel_inc_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform selection based on inclusion rate — sel_inc_rate","text":"","code":"sel_inc_rate(inc_rate, q = 0.05, tied.method = \"fair\", tol = 1e-10)"},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/sel_inc_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform selection based on inclusion rate — sel_inc_rate","text":"inc_rate inclusion rate q nominal FDR level tied.method method handling tied values. Possible choices: include include tied rate exclude exclude tied rate fair (default) compromise way compare number tied values cutoff tol tolerance comparing equality two doubles","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/sel_inc_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform selection based on inclusion rate — sel_inc_rate","text":"selected relevant features","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/simdata_1ct.html","id":null,"dir":"Reference","previous_headings":"","what":"Datasets Demo synthetic scRNA-seq data with one cell type based on DuoClustering2018::sce_full_Zhengmix4eq() — simdata_1ct","title":"Datasets Demo synthetic scRNA-seq data with one cell type based on DuoClustering2018::sce_full_Zhengmix4eq() — simdata_1ct","text":"Datasets Demo synthetic scRNA-seq data one cell type based DuoClustering2018::sce_full_Zhengmix4eq()","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/simdata_1ct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Datasets Demo synthetic scRNA-seq data with one cell type based on DuoClustering2018::sce_full_Zhengmix4eq() — simdata_1ct","text":"","code":"simdata_1ct"},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/simdata_1ct.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Datasets Demo synthetic scRNA-seq data with one cell type based on DuoClustering2018::sce_full_Zhengmix4eq() — simdata_1ct","text":"list simdata_1ct","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/simdata_2ct.html","id":null,"dir":"Reference","previous_headings":"","what":"Demo synthetic scRNA-seq data with two cell types based on DuoClustering2018::sce_full_Zhengmix4eq() — simdata_2ct","title":"Demo synthetic scRNA-seq data with two cell types based on DuoClustering2018::sce_full_Zhengmix4eq() — simdata_2ct","text":"Demo synthetic scRNA-seq data two cell types based DuoClustering2018::sce_full_Zhengmix4eq()","code":""},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/simdata_2ct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Demo synthetic scRNA-seq data with two cell types based on DuoClustering2018::sce_full_Zhengmix4eq() — simdata_2ct","text":"","code":"simdata_2ct"},{"path":"https://hohoweiya.xyz/SplitClusterTest/reference/simdata_2ct.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Demo synthetic scRNA-seq data with two cell types based on DuoClustering2018::sce_full_Zhengmix4eq() — simdata_2ct","text":"list simdata_2ct","code":""}]
